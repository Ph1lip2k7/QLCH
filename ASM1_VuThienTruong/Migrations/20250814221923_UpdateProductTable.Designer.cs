// <auto-generated />
using ASM1_VuThienTruong.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ASM1_VuThienTruong.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250814221923_UpdateProductTable")]
    partial class UpdateProductTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ASM1_VuThienTruong.Models.Cart", b =>
                {
                    b.Property<int>("CartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CartId"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.HasKey("CartId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("ASM1_VuThienTruong.Models.CartDetail", b =>
                {
                    b.Property<int>("CartDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CartDetailId"));

                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("CartDetailId");

                    b.HasIndex("CartId");

                    b.HasIndex("ProductId");

                    b.ToTable("CartDetails");
                });

            modelBuilder.Entity("ASM1_VuThienTruong.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Description = "Các mẫu siêu xe cao cấp, tốc độ và sang trọng hàng đầu thế giới",
                            Name = "Siêu xe"
                        },
                        new
                        {
                            CategoryId = 2,
                            Description = "Các mẫu xe thể thao hiệu suất cao với giá thành dễ tiếp cận hơn",
                            Name = "Xe thể thao phổ thông"
                        });
                });

            modelBuilder.Entity("ASM1_VuThienTruong.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            Email = "admin@example.com",
                            FullName = "Quản trị viên",
                            Password = "123456",
                            Username = "admin"
                        },
                        new
                        {
                            CustomerId = 2,
                            Email = "a@example.com",
                            FullName = "Nguyễn Văn A",
                            Password = "123456",
                            Username = "user1"
                        },
                        new
                        {
                            CustomerId = 3,
                            Email = "b@example.com",
                            FullName = "Trần Thị B",
                            Password = "123456",
                            Username = "user2"
                        });
                });

            modelBuilder.Entity("ASM1_VuThienTruong.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 1,
                            Description = "Siêu xe mạnh mẽ, tốc độ tối đa 350 km/h",
                            ImageUrl = "",
                            Name = "Lamborghini Aventador",
                            Price = 15000000m,
                            Stock = 5
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 1,
                            Description = "Thiết kế khí động học, tăng tốc 0-100 km/h trong 2.5s",
                            ImageUrl = "",
                            Name = "Ferrari SF90 Stradale",
                            Price = 17000000m,
                            Stock = 3
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 1,
                            Description = "Mẫu xe huyền thoại của Porsche",
                            ImageUrl = "",
                            Name = "Porsche 911 Turbo S",
                            Price = 12000000m,
                            Stock = 7
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 1,
                            Description = "Tốc độ tối đa 341 km/h",
                            ImageUrl = "",
                            Name = "McLaren 720S",
                            Price = 14000000m,
                            Stock = 4
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryId = 1,
                            Description = "Sang trọng và hiệu suất vượt trội",
                            ImageUrl = "",
                            Name = "Aston Martin DBS Superleggera",
                            Price = 16000000m,
                            Stock = 2
                        },
                        new
                        {
                            ProductId = 6,
                            CategoryId = 2,
                            Description = "Biểu tượng tốc độ Nhật Bản",
                            ImageUrl = "",
                            Name = "Nissan GT-R Nismo",
                            Price = 8000000m,
                            Stock = 8
                        },
                        new
                        {
                            ProductId = 7,
                            CategoryId = 2,
                            Description = "Huyền thoại thể thao Nhật Bản",
                            ImageUrl = "",
                            Name = "Toyota Supra GR",
                            Price = 5000000m,
                            Stock = 10
                        },
                        new
                        {
                            ProductId = 8,
                            CategoryId = 2,
                            Description = "Thiết kế động cơ đặt giữa",
                            ImageUrl = "",
                            Name = "Chevrolet Corvette C8",
                            Price = 6000000m,
                            Stock = 6
                        },
                        new
                        {
                            ProductId = 9,
                            CategoryId = 2,
                            Description = "Mạnh mẽ và hầm hố",
                            ImageUrl = "",
                            Name = "Ford Mustang Shelby GT500",
                            Price = 7000000m,
                            Stock = 5
                        },
                        new
                        {
                            ProductId = 10,
                            CategoryId = 2,
                            Description = "Hiệu suất và sự sang trọng kết hợp",
                            ImageUrl = "",
                            Name = "BMW M4 Competition",
                            Price = 6500000m,
                            Stock = 7
                        },
                        new
                        {
                            ProductId = 11,
                            CategoryId = 1,
                            Description = "Tiếng máy V10 đặc trưng",
                            ImageUrl = "",
                            Name = "Audi R8 V10 Plus",
                            Price = 11000000m,
                            Stock = 4
                        },
                        new
                        {
                            ProductId = 12,
                            CategoryId = 2,
                            Description = "Phong cách Anh Quốc",
                            ImageUrl = "",
                            Name = "Jaguar F-Type SVR",
                            Price = 9000000m,
                            Stock = 6
                        },
                        new
                        {
                            ProductId = 13,
                            CategoryId = 1,
                            Description = "Động cơ V8 mạnh mẽ",
                            ImageUrl = "",
                            Name = "Mercedes-AMG GT R",
                            Price = 10500000m,
                            Stock = 3
                        },
                        new
                        {
                            ProductId = 14,
                            CategoryId = 2,
                            Description = "Thiết kế tương lai",
                            ImageUrl = "",
                            Name = "Lexus LC 500",
                            Price = 8500000m,
                            Stock = 5
                        },
                        new
                        {
                            ProductId = 15,
                            CategoryId = 2,
                            Description = "Nhỏ gọn và cực nhanh",
                            ImageUrl = "",
                            Name = "Alfa Romeo 4C",
                            Price = 4000000m,
                            Stock = 9
                        });
                });

            modelBuilder.Entity("ASM1_VuThienTruong.Models.Cart", b =>
                {
                    b.HasOne("ASM1_VuThienTruong.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("ASM1_VuThienTruong.Models.CartDetail", b =>
                {
                    b.HasOne("ASM1_VuThienTruong.Models.Cart", "Cart")
                        .WithMany("CartDetails")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ASM1_VuThienTruong.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ASM1_VuThienTruong.Models.Product", b =>
                {
                    b.HasOne("ASM1_VuThienTruong.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ASM1_VuThienTruong.Models.Cart", b =>
                {
                    b.Navigation("CartDetails");
                });

            modelBuilder.Entity("ASM1_VuThienTruong.Models.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
